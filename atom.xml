<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>布吉的网络日志</title>
  
  <subtitle>记录从这一刻开始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yulang.xyz/"/>
  <updated>2019-05-24T05:34:19.687Z</updated>
  <id>https://yulang.xyz/</id>
  
  <author>
    <name>布吉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>yu</title>
    <link href="https://yulang.xyz/2019/05/24/yu/"/>
    <id>https://yulang.xyz/2019/05/24/yu/</id>
    <published>2019-05-24T05:34:19.000Z</published>
    <updated>2019-05-24T05:34:19.687Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js:for ...of与 for... in</title>
    <link href="https://yulang.xyz/2019/05/24/5-24/"/>
    <id>https://yulang.xyz/2019/05/24/5-24/</id>
    <published>2019-05-24T03:07:01.000Z</published>
    <updated>2019-05-24T07:18:41.412Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="for…in遍历对象的属性或数组索引（ES5）"><a href="#for…in遍历对象的属性或数组索引（ES5）" class="headerlink" title="for…in遍历对象的属性或数组索引（ES5）"></a><strong>for…in遍历对象的属性或数组索引（ES5）</strong></h4></li></ul><p>eg1:遍历数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> arr)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(index);<span class="comment">// 0 1 2 3</span></span><br><span class="line">            <span class="built_in">console</span>.log(arr[index]);<span class="comment">// a b c d</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>eg2:遍历对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">      name:<span class="string">"Jin"</span>,</span><br><span class="line">      age:<span class="number">11</span>,</span><br><span class="line">      [<span class="built_in">Symbol</span>()]:<span class="number">123</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> obj)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(index);<span class="comment">//name age </span></span><br><span class="line">      <span class="built_in">console</span>.log(obj[index]);<span class="comment">//Jin  11</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>eg3:遍历对象的顺序<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">            <span class="string">"49"</span>:<span class="string">"A"</span>,</span><br><span class="line">            <span class="string">"a"</span>:<span class="string">"tt"</span>,</span><br><span class="line">            <span class="string">"5"</span>:<span class="literal">false</span>,</span><br><span class="line">            <span class="string">"1"</span>:<span class="string">"ss"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> obj)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(index);<span class="comment">//1 5 49 a</span></span><br><span class="line">            <span class="built_in">console</span>.log(obj[index])<span class="comment">//ss false A tt</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><h4 id="for…in的要点："><a href="#for…in的要点：" class="headerlink" title="for…in的要点："></a><strong>for…in的要点</strong>：</h4><h6 id="不支持IE浏览器（IE9以下的）"><a href="#不支持IE浏览器（IE9以下的）" class="headerlink" title="-不支持IE浏览器（IE9以下的）"></a>-不支持IE浏览器（IE9以下的）</h6><h6 id="遍历的顺序可能不是实际的内部顺序-先遍历出整数属性，按照升序-，然后其他属性按照创建时的顺序遍历出来"><a href="#遍历的顺序可能不是实际的内部顺序-先遍历出整数属性，按照升序-，然后其他属性按照创建时的顺序遍历出来" class="headerlink" title="-遍历的顺序可能不是实际的内部顺序(先遍历出整数属性，按照升序)，然后其他属性按照创建时的顺序遍历出来"></a>-遍历的顺序可能不是实际的内部顺序(先遍历出整数属性，按照升序)，然后其他属性按照创建时的顺序遍历出来</h6><h6 id="for-in会遍历数组所有的可枚举属性，包括原型中存在的属性（object-prototype添加的属性）"><a href="#for-in会遍历数组所有的可枚举属性，包括原型中存在的属性（object-prototype添加的属性）" class="headerlink" title="-for in会遍历数组所有的可枚举属性，包括原型中存在的属性（object.prototype添加的属性）"></a>-for in会遍历数组所有的可枚举属性，包括原型中存在的属性（object.prototype添加的属性）</h6><h6 id="for-in一般用于遍历对象属性"><a href="#for-in一般用于遍历对象属性" class="headerlink" title="-for in一般用于遍历对象属性"></a>-for in一般用于遍历对象属性</h6><h6 id="for-in无返回值"><a href="#for-in无返回值" class="headerlink" title="-for in无返回值"></a>-for in无返回值</h6><h6 id="Symbol-作为属性名，该属性不会出现在for…in、循环中"><a href="#Symbol-作为属性名，该属性不会出现在for…in、循环中" class="headerlink" title="-Symbol 作为属性名，该属性不会出现在for…in、循环中"></a>-Symbol 作为属性名，该属性不会出现在for…in、循环中</h6><ul><li><h4 id="for…of可遍历数组，Set-Map-类数组对象-eg-arguments-DOM-NodeList对象，字符串-（ES6）不能遍历对象"><a href="#for…of可遍历数组，Set-Map-类数组对象-eg-arguments-DOM-NodeList对象，字符串-（ES6）不能遍历对象" class="headerlink" title="for…of可遍历数组，Set,Map,类数组对象(eg:arguments,DOM NodeList对象，字符串)（ES6）不能遍历对象"></a><strong>for…of可遍历数组，Set,Map,类数组对象(eg:arguments,DOM NodeList对象，字符串)（ES6）不能遍历对象</strong></h4></li></ul><p>eg1:遍历数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> arr)&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(key);<span class="comment">// a b c d</span></span><br><span class="line">           <span class="built_in">console</span>.log(arr[key]); <span class="comment">//undefined undefined undefined undefined</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><p>eg2:遍历对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">           <span class="string">"49"</span>:<span class="string">"A"</span>,</span><br><span class="line">           <span class="string">"a"</span>:<span class="string">"tt"</span>,</span><br><span class="line">           <span class="string">"5"</span>:<span class="literal">false</span>,</span><br><span class="line">           <span class="string">"1"</span>:<span class="string">"ss"</span>,</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> obj)&#123;<span class="comment">//报错</span></span><br><span class="line">           <span class="built_in">console</span>.log(index);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><p>eg3:for of与Object.keys()遍历对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">           name:<span class="string">"Jin"</span>,</span><br><span class="line">           age:<span class="number">11</span>,</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> <span class="built_in">Object</span>.keys(obj))&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(value);<span class="comment">//name age</span></span><br><span class="line">           <span class="built_in">console</span>.log(obj[value]);<span class="comment">//Jin 11</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><p>eg4:for of与Object.keys()遍历数组索引<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> <span class="built_in">Object</span>.keys(arr))&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(value);<span class="comment">//0 1 2</span></span><br><span class="line">           <span class="built_in">console</span>.log(arr[value]);<span class="comment">// a b c</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><p>eg4:for of与Object.entries()遍历索引和值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> [index,value] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(arr))&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(index);<span class="comment">//0 1 2</span></span><br><span class="line">           <span class="built_in">console</span>.log(value);<span class="comment">//a b c</span></span><br><span class="line">           <span class="built_in">console</span>.log(arr[index]);<span class="comment">//a b c</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><p>eg5:for of与Object.values()遍历属性值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> [index,value] <span class="keyword">of</span> <span class="built_in">Object</span>.values(arr))&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(index);<span class="comment">//a b c</span></span><br><span class="line">           <span class="built_in">console</span>.log(value);<span class="comment">//undefined undefined undefined</span></span><br><span class="line">           <span class="built_in">console</span>.log(arr[index]);<span class="comment">//undefined undefined undefined</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><p><strong>for…of的要点：</strong></p><h6 id="for-of其实遍历的是对象的Symbol-iterator属性，而对象没有该属性"><a href="#for-of其实遍历的是对象的Symbol-iterator属性，而对象没有该属性" class="headerlink" title="-for of其实遍历的是对象的Symbol.iterator属性，而对象没有该属性"></a>-for of其实遍历的是对象的Symbol.iterator属性，而对象没有该属性</h6><h6 id="不会遍历到对象属性和原型属性"><a href="#不会遍历到对象属性和原型属性" class="headerlink" title="-不会遍历到对象属性和原型属性"></a>-不会遍历到对象属性和原型属性</h6><h6 id="如果要遍历对象，可与Object-keys-配合使用"><a href="#如果要遍历对象，可与Object-keys-配合使用" class="headerlink" title="-如果要遍历对象，可与Object.keys()配合使用"></a>-如果要遍历对象，可与Object.keys()配合使用</h6><h6 id="配合Object-entries-输出数组索引和元素值-对象的属性和属性值，但Symbol-属性会忽略"><a href="#配合Object-entries-输出数组索引和元素值-对象的属性和属性值，但Symbol-属性会忽略" class="headerlink" title="-配合Object.entries() 输出数组索引和元素值/对象的属性和属性值，但Symbol()属性会忽略"></a>-配合Object.entries() 输出数组索引和元素值/对象的属性和属性值，但Symbol()属性会忽略</h6><h6 id="配合Object-values-输出数组元素值-对象属性值，"><a href="#配合Object-values-输出数组元素值-对象属性值，" class="headerlink" title="-配合Object.values() 输出数组元素值/对象属性值，"></a>-配合Object.values() 输出数组元素值/对象属性值，</h6><h6 id="一般用于遍历数组或者伪数组"><a href="#一般用于遍历数组或者伪数组" class="headerlink" title="-一般用于遍历数组或者伪数组"></a>-一般用于遍历数组或者伪数组</h6><h6 id="无返回值"><a href="#无返回值" class="headerlink" title="-无返回值"></a>-无返回值</h6><h6 id="Symbol-作为属性名，该属性不会出现在for…in、for…of循环中，也不会被Object-keys-、Object-getOwnPropertyNames-、JSON-stringify-返回"><a href="#Symbol-作为属性名，该属性不会出现在for…in、for…of循环中，也不会被Object-keys-、Object-getOwnPropertyNames-、JSON-stringify-返回" class="headerlink" title="-Symbol 作为属性名，该属性不会出现在for…in、for…of循环中，也不会被Object.keys()、Object.getOwnPropertyNames()、JSON.stringify()返回"></a>-Symbol 作为属性名，该属性不会出现在for…in、for…of循环中，也不会被Object.keys()、Object.getOwnPropertyNames()、JSON.stringify()返回</h6><ul><li><h4 id="Iterator-遍历器-与for…of"><a href="#Iterator-遍历器-与for…of" class="headerlink" title="Iterator(遍历器)与for…of"></a><strong>Iterator(遍历器)与for…of</strong></h4></li><li><strong>遍历器（Iterator）</strong> 它是一种接口，为各种不同的数据结构（Array,Object,Set,Map）提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。</li><li><strong>Iterator 的作用</strong><br>一是为各种数据结构，提供访问接口；二是使得数据结构的成员能够按某种次序排列；三是 ES6 创造了一种新的遍历命令for…of循环，当使用for…of循环遍历某种数据结构时，该循环会自动去寻找 Iterator 接口。</li><li><strong>Iterator 的遍历过程</strong></li></ul><ol><li>创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。</li><li>第一次调用指针对象的next方法，可以将指针指向数据结构的第一个成员。</li><li>第二次调用指针对象的next方法，指针就指向数据结构的第二个成员。</li><li>不断调用指针对象的next方法，直到它指向数据结构的结束位置。每一次调用next方法，都会返回数据结构的当前成员的信息。具体来说，就是返回一个包含value和done两个属性的对象。其中，value属性是当前成员的值，done属性是一个布尔值，表示遍历是否结束。</li></ol><ul><li><p><strong>ES6 规定</strong>，默认的 Iterator 接口部署在数据结构的Symbol.iterator属性，或者说，一个数据结构只要具有Symbol.iterator属性，就可以认为是“可遍历的”Symbol.iterator属性本身是一个函数，就是当前数据结构默认的遍历器生成函数。执行这个函数，就会返回一个遍历器。</p></li><li><p><strong>原生具备 Iterator 接口的数据结构</strong></p></li></ul><ol><li>Array</li><li>Map</li><li>Set</li><li>String</li><li>TypedArray</li><li>函数的 arguments 对象</li><li>NodeList 对象</li></ol><ul><li>对象（Object）之所以没有默认部署 Iterator 接口，是因为对象的哪个属性先遍历，哪个属性后遍历是不确定的，需要开发者手动指定。</li><li><strong>会默认调用 Iterator 接口场合</strong></li></ul><ol><li>解构赋值</li><li>扩展运算符</li><li>yield*</li><li>for…of</li><li>Array.from()</li><li>Map()</li><li>Set() </li><li>WeakMap()</li><li>WeakSet()（比如new Map([[‘a’,1],[‘b’,2]])）</li><li>Promise.all()</li><li>Promise.race()</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;for…in遍历对象的属性或数组索引（ES5）&quot;&gt;&lt;a href=&quot;#for…in遍历对象的属性或数组索引（ES5）&quot; class=&quot;headerlink&quot; title=&quot;for…in遍历对象的属性或数组索引（ES5）&quot;&gt;&lt;/a&gt;&lt;strong&gt;
      
    
    </summary>
    
      <category term="学习 - javaScript" scheme="https://yulang.xyz/categories/%E5%AD%A6%E4%B9%A0-javaScript/"/>
    
    
      <category term="前端" scheme="https://yulang.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>fileName</title>
    <link href="https://yulang.xyz/2019/05/23/fileName/"/>
    <id>https://yulang.xyz/2019/05/23/fileName/</id>
    <published>2019-05-23T15:38:42.000Z</published>
    <updated>2019-05-24T07:19:05.378Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="javascript" scheme="https://yulang.xyz/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yulang.xyz/2019/05/23/hello-world/"/>
    <id>https://yulang.xyz/2019/05/23/hello-world/</id>
    <published>2019-05-23T13:39:49.719Z</published>
    <updated>2019-05-23T13:39:49.719Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
